import{d as ue,r as m,a as de,o as ce,b as $,e as _,f as n,g as s,q as h,w as a,u as f,K as _e,L as pe,j as me,h as o,s as P,M as x,E as p,l as u,N as fe,O as ve,P as ge,t as i,m as be,n as ye,Q as he,y as xe,z as F,_ as we}from"./index-I938XGX1.js";const ke={class:"schedule-container"},Ve={class:"page-header"},Se={class:"header-actions"},Ce={class:"status-content"},Be={class:"status-info"},Te={class:"status-text"},je={class:"status-content"},Je={class:"status-value"},Me={class:"status-content"},Ue={class:"status-value running"},$e={class:"status-content"},De={class:"status-value error"},ze={class:"status-content"},Ie={class:"status-value suspended"},Fe={class:"card-header"},Ne={class:"table-actions"},qe={class:"cluster-name"},Ee={class:"execution-stats"},Le={class:"success-count"},Re={class:"total-count"},Oe={class:"success-rate"},Pe={key:1,class:"no-errors"},Ae={key:0,class:"error-message"},Ke={key:1,class:"no-error"},Qe={class:"dialog-footer"},Ge=ue({__name:"Schedule",setup(He){const C=m(!1),b=m(!1),w=m(!1),D=m(!1),B=m(""),d=m(null),T=m([]),j=m([]),J=m(),r=de({enabled:!0,default_interval:"30m",max_concurrent_jobs:5,retry_max_attempts:3,retry_interval:"5m",enable_persistence:!0,health_check_interval:"10m"}),A={default_interval:[{required:!0,message:"请设置默认采集间隔",trigger:"blur"}],max_concurrent_jobs:[{required:!0,message:"请设置最大并发任务数",trigger:"blur"}],retry_max_attempts:[{required:!0,message:"请设置最大重试次数",trigger:"blur"}]},N=l=>new Date(l).toLocaleString("zh-CN"),K=l=>{const e=l.match(/(\d+)m/);return e?`${e[1]}分钟`:l},Q=l=>({running:"success",stopped:"info",error:"danger",suspended:"warning"})[l]||"info",G=l=>({running:"运行中",stopped:"已停止",error:"错误",suspended:"暂停"})[l]||l,z=l=>l.total_runs===0?100:Math.round(l.successful_runs/l.total_runs*100),q=async()=>{try{const l=await x.getStatus();d.value=l.data}catch(l){console.error("获取调度状态失败:",l),p.error("获取调度状态失败")}},E=async()=>{try{C.value=!0;const l=await x.getJobs();T.value=l.data||[],j.value=T.value}catch(l){console.error("获取调度任务失败:",l),p.error("获取调度任务失败")}finally{C.value=!1}},M=async()=>{await Promise.all([q(),E()])},H=()=>{if(!B.value.trim()){j.value=T.value;return}const l=B.value.toLowerCase();j.value=T.value.filter(e=>e.cluster_name.toLowerCase().includes(l))},W=async()=>{try{await F.confirm("确定要启动调度服务吗？启动后将开始定时收集各集群的数据。","确认启动",{confirmButtonText:"启动",cancelButtonText:"取消",type:"info"}),b.value=!0,await x.start(),p.success("调度服务启动成功"),await M()}catch(l){l!=="cancel"&&(console.error("启动调度服务失败:",l),p.error("启动调度服务失败"))}finally{b.value=!1}},X=async()=>{try{await F.confirm("确定要停止调度服务吗？停止后将暂停所有数据收集任务。","确认停止",{confirmButtonText:"停止",cancelButtonText:"取消",type:"warning"}),b.value=!0,await x.stop(),p.success("调度服务停止成功"),await M()}catch(l){l!=="cancel"&&(console.error("停止调度服务失败:",l),p.error("停止调度服务失败"))}finally{b.value=!1}},Y=async l=>{try{await F.confirm(`确定要重启集群 "${l.cluster_name}" 的调度任务吗？`,"确认重启",{confirmButtonText:"重启",cancelButtonText:"取消",type:"warning"}),l.restarting=!0,await x.restartJob(l.cluster_id),p.success(`集群 ${l.cluster_name} 的任务重启成功`),await E()}catch(e){e!=="cancel"&&(console.error("重启任务失败:",e),p.error("重启任务失败"))}finally{l.restarting=!1}},Z=()=>{var l;if((l=d.value)!=null&&l.global_settings){const e=d.value.global_settings;r.enabled=e.enabled,r.default_interval=typeof e.default_interval=="string"?parseInt(e.default_interval.replace("m0s","")):e.default_interval,r.max_concurrent_jobs=e.max_concurrent_jobs,r.retry_max_attempts=e.retry_max_attempts,r.retry_interval=typeof e.retry_interval=="string"?parseInt(e.retry_interval.replace("m0s","")):e.retry_interval,r.enable_persistence=e.enable_persistence,r.health_check_interval=typeof e.health_check_interval=="string"?parseInt(e.health_check_interval.replace("m0s","")):e.health_check_interval}w.value=!0},ee=()=>{var l;(l=J.value)==null||l.resetFields()},te=async()=>{if(J.value)try{await J.value.validate(),D.value=!0;const l={enabled:r.enabled,default_interval:`${r.default_interval}m0s`,max_concurrent_jobs:r.max_concurrent_jobs,retry_max_attempts:r.retry_max_attempts,retry_interval:`${r.retry_interval}m0s`,enable_persistence:r.enable_persistence,health_check_interval:`${r.health_check_interval}m0s`};await x.updateSettings(l),p.success("设置保存成功"),w.value=!1,await q()}catch(l){console.error("保存设置失败:",l),p.error("保存设置失败")}finally{D.value=!1}};return ce(()=>{M()}),(l,e)=>{var O;const v=o("el-button"),U=o("el-icon"),y=o("el-card"),k=o("el-col"),se=o("el-row"),ae=o("el-input"),c=o("el-table-column"),L=o("el-tag"),le=o("el-progress"),ne=o("el-table"),R=o("el-switch"),g=o("el-form-item"),V=o("el-input-number"),re=o("el-form"),oe=o("el-dialog"),ie=ye("loading");return _(),$("div",ke,[n("div",Ve,[e[14]||(e[14]=n("div",{class:"header-left"},[n("h1",null,"调度任务管理"),n("p",{class:"subtitle"},"管理集群数据收集的定时调度任务")],-1)),n("div",Se,[(O=d.value)!=null&&O.service_running?(_(),h(v,{key:1,type:"danger",onClick:X,loading:b.value,icon:f(pe)},{default:a(()=>[...e[11]||(e[11]=[u(" 停止服务 ",-1)])]),_:1},8,["loading","icon"])):(_(),h(v,{key:0,type:"success",onClick:W,loading:b.value,icon:f(_e)},{default:a(()=>[...e[10]||(e[10]=[u(" 启动服务 ",-1)])]),_:1},8,["loading","icon"])),s(v,{onClick:M,loading:C.value,icon:f(me)},{default:a(()=>[...e[12]||(e[12]=[u(" 刷新 ",-1)])]),_:1},8,["loading","icon"]),s(v,{onClick:Z,icon:f(P)},{default:a(()=>[...e[13]||(e[13]=[u(" 全局设置 ",-1)])]),_:1},8,["icon"])])]),s(se,{gutter:20,class:"status-overview"},{default:a(()=>[s(k,{span:4},{default:a(()=>[s(y,{class:"status-card"},{default:a(()=>{var t,S,I;return[n("div",Ce,[n("div",{class:fe(["status-icon",(t=d.value)!=null&&t.service_running?"running":"stopped"])},[(S=d.value)!=null&&S.service_running?(_(),h(U,{key:0},{default:a(()=>[s(f(ve))]),_:1})):(_(),h(U,{key:1},{default:a(()=>[s(f(ge))]),_:1}))],2),n("div",Be,[n("div",Te,i((I=d.value)!=null&&I.service_running?"运行中":"已停止"),1),e[15]||(e[15]=n("div",{class:"status-label"},"服务状态",-1))])])]}),_:1})]),_:1}),s(k,{span:5},{default:a(()=>[s(y,{class:"status-card"},{default:a(()=>{var t;return[n("div",je,[n("div",Je,i(((t=d.value)==null?void 0:t.total_jobs)||0),1),e[16]||(e[16]=n("div",{class:"status-label"},"总任务数",-1))])]}),_:1})]),_:1}),s(k,{span:5},{default:a(()=>[s(y,{class:"status-card"},{default:a(()=>{var t;return[n("div",Me,[n("div",Ue,i(((t=d.value)==null?void 0:t.running_jobs)||0),1),e[17]||(e[17]=n("div",{class:"status-label"},"运行中",-1))])]}),_:1})]),_:1}),s(k,{span:5},{default:a(()=>[s(y,{class:"status-card"},{default:a(()=>{var t;return[n("div",$e,[n("div",De,i(((t=d.value)==null?void 0:t.error_jobs)||0),1),e[18]||(e[18]=n("div",{class:"status-label"},"错误任务",-1))])]}),_:1})]),_:1}),s(k,{span:5},{default:a(()=>[s(y,{class:"status-card"},{default:a(()=>{var t;return[n("div",ze,[n("div",Ie,i(((t=d.value)==null?void 0:t.suspended_jobs)||0),1),e[19]||(e[19]=n("div",{class:"status-label"},"暂停任务",-1))])]}),_:1})]),_:1})]),_:1}),s(y,{class:"jobs-table-card"},{header:a(()=>[n("div",Fe,[e[20]||(e[20]=n("span",null,"调度任务列表",-1)),n("div",Ne,[s(ae,{modelValue:B.value,"onUpdate:modelValue":e[0]||(e[0]=t=>B.value=t),placeholder:"搜索集群...","prefix-icon":f(xe),clearable:"",style:{width:"200px"},onInput:H},null,8,["modelValue","prefix-icon"])])])]),default:a(()=>[be((_(),h(ne,{data:j.value,style:{width:"100%"},"empty-text":"暂无调度任务"},{default:a(()=>[s(c,{prop:"cluster_name",label:"集群名称",width:"150"},{default:a(({row:t})=>[n("div",qe,[s(U,{class:"cluster-icon"},{default:a(()=>[s(f(P))]),_:1}),u(" "+i(t.cluster_name),1)])]),_:1}),s(c,{prop:"status",label:"任务状态",width:"100",align:"center"},{default:a(({row:t})=>[s(L,{type:Q(t.status),size:"small"},{default:a(()=>[u(i(G(t.status)),1)]),_:2},1032,["type"])]),_:1}),s(c,{prop:"interval",label:"执行间隔",width:"120",align:"center"},{default:a(({row:t})=>[u(i(K(t.interval)),1)]),_:1}),s(c,{prop:"last_run",label:"上次执行",width:"160"},{default:a(({row:t})=>[u(i(t.last_run?N(t.last_run):"从未执行"),1)]),_:1}),s(c,{prop:"next_run",label:"下次执行",width:"160"},{default:a(({row:t})=>[u(i(t.next_run?N(t.next_run):"未计划"),1)]),_:1}),s(c,{label:"执行统计",width:"120",align:"center"},{default:a(({row:t})=>[n("div",Ee,[n("div",Le,"成功: "+i(t.successful_runs),1),n("div",Re,"总计: "+i(t.total_runs),1)])]),_:1}),s(c,{label:"成功率",width:"100",align:"center"},{default:a(({row:t})=>[n("div",Oe,i(z(t))+"% ",1),s(le,{percentage:z(t),"stroke-width":4,"show-text":!1,status:z(t)<80?"exception":"success"},null,8,["percentage","status"])]),_:1}),s(c,{prop:"error_count",label:"错误次数",width:"100",align:"center"},{default:a(({row:t})=>[t.error_count>0?(_(),h(L,{key:0,type:"danger",size:"small"},{default:a(()=>[u(i(t.error_count),1)]),_:2},1024)):(_(),$("span",Pe,"0"))]),_:1}),s(c,{prop:"last_error",label:"最近错误","min-width":"200","show-overflow-tooltip":""},{default:a(({row:t})=>[t.last_error?(_(),$("span",Ae,i(t.last_error),1)):(_(),$("span",Ke,"无错误"))]),_:1}),s(c,{label:"操作",width:"120",align:"center",fixed:"right"},{default:a(({row:t})=>{var S;return[s(v,{type:"primary",size:"small",onClick:I=>Y(t),loading:t.restarting,disabled:!((S=d.value)!=null&&S.service_running)},{default:a(()=>[s(U,null,{default:a(()=>[s(f(he))]),_:1}),e[21]||(e[21]=u(" 重启 ",-1))]),_:1},8,["onClick","loading","disabled"])]}),_:1})]),_:1},8,["data"])),[[ie,C.value]])]),_:1}),s(oe,{modelValue:w.value,"onUpdate:modelValue":e[9]||(e[9]=t=>w.value=t),title:"全局调度设置",width:"600px",onClose:ee},{footer:a(()=>[n("span",Qe,[s(v,{onClick:e[8]||(e[8]=t=>w.value=!1)},{default:a(()=>[...e[27]||(e[27]=[u("取消",-1)])]),_:1}),s(v,{type:"primary",onClick:te,loading:D.value},{default:a(()=>[...e[28]||(e[28]=[u(" 保存设置 ",-1)])]),_:1},8,["loading"])])]),default:a(()=>[s(re,{ref_key:"settingsFormRef",ref:J,model:r,rules:A,"label-width":"140px"},{default:a(()=>[s(g,{label:"启用调度",prop:"enabled"},{default:a(()=>[s(R,{modelValue:r.enabled,"onUpdate:modelValue":e[1]||(e[1]=t=>r.enabled=t)},null,8,["modelValue"]),e[22]||(e[22]=n("span",{style:{"margin-left":"10px",color:"#909399"}},"是否启用定时数据收集",-1))]),_:1}),s(g,{label:"默认采集间隔",prop:"default_interval"},{default:a(()=>[s(V,{modelValue:r.default_interval,"onUpdate:modelValue":e[2]||(e[2]=t=>r.default_interval=t),min:5,max:1440,"controls-position":"right",style:{width:"200px"}},null,8,["modelValue"]),e[23]||(e[23]=n("span",{style:{"margin-left":"10px",color:"#909399"}},"分钟",-1))]),_:1}),s(g,{label:"最大并发任务",prop:"max_concurrent_jobs"},{default:a(()=>[s(V,{modelValue:r.max_concurrent_jobs,"onUpdate:modelValue":e[3]||(e[3]=t=>r.max_concurrent_jobs=t),min:1,max:20,"controls-position":"right",style:{width:"200px"}},null,8,["modelValue"])]),_:1}),s(g,{label:"最大重试次数",prop:"retry_max_attempts"},{default:a(()=>[s(V,{modelValue:r.retry_max_attempts,"onUpdate:modelValue":e[4]||(e[4]=t=>r.retry_max_attempts=t),min:1,max:10,"controls-position":"right",style:{width:"200px"}},null,8,["modelValue"])]),_:1}),s(g,{label:"重试间隔",prop:"retry_interval"},{default:a(()=>[s(V,{modelValue:r.retry_interval,"onUpdate:modelValue":e[5]||(e[5]=t=>r.retry_interval=t),min:1,max:60,"controls-position":"right",style:{width:"200px"}},null,8,["modelValue"]),e[24]||(e[24]=n("span",{style:{"margin-left":"10px",color:"#909399"}},"分钟",-1))]),_:1}),s(g,{label:"启用数据持久化",prop:"enable_persistence"},{default:a(()=>[s(R,{modelValue:r.enable_persistence,"onUpdate:modelValue":e[6]||(e[6]=t=>r.enable_persistence=t)},null,8,["modelValue"]),e[25]||(e[25]=n("span",{style:{"margin-left":"10px",color:"#909399"}},"将收集的数据保存到数据库",-1))]),_:1}),s(g,{label:"健康检查间隔",prop:"health_check_interval"},{default:a(()=>[s(V,{modelValue:r.health_check_interval,"onUpdate:modelValue":e[7]||(e[7]=t=>r.health_check_interval=t),min:5,max:60,"controls-position":"right",style:{width:"200px"}},null,8,["modelValue"]),e[26]||(e[26]=n("span",{style:{"margin-left":"10px",color:"#909399"}},"分钟",-1))]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])}}}),Xe=we(Ge,[["__scopeId","data-v-130eceb6"]]);export{Xe as default};
